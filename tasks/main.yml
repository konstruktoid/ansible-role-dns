---
- name: Create custom facts directory
  become: true
  ansible.builtin.file:
    path: /etc/ansible/facts.d
    recurse: true
    state: directory
    mode: "0755"
    owner: root
    group: root

- name: Add systemd version fact
  become: true
  ansible.builtin.template:
    src: etc/ansible/facts.d/systemd.fact
    dest: /etc/ansible/facts.d/systemd.fact
    mode: "0755"
    owner: root
    group: root

- name: Update facts
  ansible.builtin.setup:

- name: Run apt update
  become: true
  ansible.builtin.apt:
    update_cache: "yes"
    cache_valid_time: 1800
  notify:
    - Run apt-get clean
    - Run apt-get autoremove

- name: Install packages
  become: true
  ansible.builtin.apt:
    name: [dnsmasq, stubby]
    state: present
    install_recommends: "no"

- name: Get installed dnsmasq version
  ansible.builtin.shell: |
    set -o pipefail
    dpkg -s dnsmasq | grep '^Version' | awk '{print $NF}'
  args:
    executable: /bin/bash
  changed_when: false
  register: dnsmasq_version
  failed_when: dnsmasq_version.rc != 0

- name: Configure systemd-resolved
  become: true
  notify:
    - Reload systemd
  block:
    - name: Configure systemd-resolved DNSStubListener
      ansible.builtin.lineinfile:
        regexp: ^#?DNSStubListener=yes
        line: DNSStubListener=no
        path: /etc/systemd/resolved.conf
        state: present
        mode: "0644"
        create: "no"
        backrefs: "yes"

    - name: Configure systemd-resolved DNS
      ansible.builtin.lineinfile:
        regexp: ^#?DNS=
        line: DNS={{ dnsmasq_listen_address | replace(',', ' ') }}
        path: /etc/systemd/resolved.conf
        state: present
        mode: "0644"
        create: "no"
        backrefs: "yes"

- name: Add /etc/hosts script
  become: true
  ansible.builtin.copy:
    src: etc/cron.daily/generate_hosts
    dest: /etc/cron.daily/generate_hosts
    backup: true
    mode: "0755"
    owner: root
    group: root

- name: Stat resolv.conf
  ansible.builtin.stat:
    path: /etc/resolv.conf
  register: resolv_conf

- name: Fix systemd resolv link
  when:
    - ansible_local.systemd.version | int < 246
    - (not resolv_conf.stat.exists or resolv_conf.stat.islnk)
    - not resolv_conf.stat.lnk_target == "/run/systemd/resolve/resolv.conf"
  block:
    - name: Remove resolv.conf
      become: true
      ansible.builtin.file:
        path: /etc/resolv.conf
        state: absent

    - name: Force resolv.conf relink
      become: true
      ansible.builtin.file:
        src: /run/systemd/resolve/resolv.conf
        path: /etc/resolv.conf
        owner: root
        group: root
        state: link
        force: true

- name: Install stubby configuration
  become: true
  ansible.builtin.template:
    src: etc/stubby/stubby.yml.j2
    dest: /etc/stubby/stubby.yml
    owner: root
    group: root
    mode: "0644"
  notify:
    - Restart stubby
    - Enable stubby

- name: Configure dnsmasq
  notify:
    - Reload systemd
    - Restart dnsmasq
    - Enable dnsmasq
  block:
    - name: Install dnsmasq configuration
      become: true
      ansible.builtin.template:
        src: etc/dnsmasq.conf.j2
        dest: /etc/dnsmasq.conf
        mode: "0644"
        owner: dnsmasq
        group: nogroup

    - name: Install dnsmasq service configuration
      become: true
      ansible.builtin.template:
        src: etc/systemd/system/dnsmasq.service
        dest: /etc/systemd/system/dnsmasq.service
        mode: "0644"
        owner: root
        group: root

- name: Flush all handlers
  ansible.builtin.meta: flush_handlers

- name: Verify DNS server using dig @127.0.0.1
  ansible.builtin.shell: dig @127.0.0.1 proton.me
  args:
    executable: /bin/bash
  register: dig_server_localhost
  changed_when: false
  failed_when: dig_server_localhost.rc != 0

- name: Verify DNS server using dig @{{ ansible_default_ipv4.address | default(ansible_all_ipv4_addresses[0]) }}
  ansible.builtin.shell: dig @{{ ansible_default_ipv4.address | default(ansible_all_ipv4_addresses[0]) }} proton.me
  args:
    executable: /bin/bash
  register: dig_server_ipv4
  changed_when: false
  failed_when: dig_server_ipv4.rc != 0

- name: Generate a new /etc/hosts
  become: true
  ansible.builtin.shell: |
    set -o pipefail
    /etc/cron.daily/generate_hosts
  args:
    executable: /bin/bash
  register: generate_hosts
  changed_when: generate_hosts.rc != 0
  failed_when: generate_hosts.rc != 0
